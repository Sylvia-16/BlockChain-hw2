{
	"id": "6fb61532e11a117fe8b8438522577d1c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:198   */\ntag_21:\n    /* \"#utility.yul\":66:143   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:144   */\n  mstore\n    /* \"#utility.yul\":163:167   */\n  0x41\n    /* \"#utility.yul\":160:161   */\n  0x04\n    /* \"#utility.yul\":153:168   */\n  mstore\n    /* \"#utility.yul\":187:191   */\n  0x24\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":177:192   */\n  revert\n    /* \"#utility.yul\":203:1088   */\ntag_22:\n    /* \"#utility.yul\":257:262   */\n  0x00\n    /* \"#utility.yul\":310:313   */\n  dup3\n    /* \"#utility.yul\":303:307   */\n  0x1f\n    /* \"#utility.yul\":295:301   */\n  dup4\n    /* \"#utility.yul\":291:308   */\n  add\n    /* \"#utility.yul\":287:314   */\n  slt\n    /* \"#utility.yul\":277:332   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":328:329   */\n  0x00\n    /* \"#utility.yul\":325:326   */\n  dup1\n    /* \"#utility.yul\":318:330   */\n  revert\n    /* \"#utility.yul\":277:332   */\ntag_26:\n    /* \"#utility.yul\":357:363   */\n  dup2\n    /* \"#utility.yul\":351:364   */\n  mload\n  sub(exp(0x02, 0x40), 0x01)\n    /* \"#utility.yul\":420:422   */\n  dup1\n    /* \"#utility.yul\":416:418   */\n  dup3\n    /* \"#utility.yul\":413:423   */\n  gt\n    /* \"#utility.yul\":410:446   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":426:444   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":501:503   */\n  0x40\n    /* \"#utility.yul\":495:504   */\n  mload\n    /* \"#utility.yul\":469:471   */\n  0x1f\n    /* \"#utility.yul\":555:568   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":551:573   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":575:577   */\n  0x3f\n    /* \"#utility.yul\":547:578   */\n  add\n    /* \"#utility.yul\":543:583   */\n  and\n    /* \"#utility.yul\":531:584   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":599:617   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":619:641   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":596:642   */\n  or\n    /* \"#utility.yul\":593:665   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":645:663   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":685:695   */\n  dup2\n    /* \"#utility.yul\":681:683   */\n  0x40\n    /* \"#utility.yul\":674:696   */\n  mstore\n    /* \"#utility.yul\":720:722   */\n  dup4\n    /* \"#utility.yul\":712:718   */\n  dup2\n    /* \"#utility.yul\":705:723   */\n  mstore\n    /* \"#utility.yul\":742:746   */\n  0x20\n    /* \"#utility.yul\":732:746   */\n  swap3\n  pop\n    /* \"#utility.yul\":787:790   */\n  dup7\n    /* \"#utility.yul\":782:784   */\n  dup4\n    /* \"#utility.yul\":777:779   */\n  dup6\n    /* \"#utility.yul\":769:775   */\n  dup9\n    /* \"#utility.yul\":765:780   */\n  add\n    /* \"#utility.yul\":761:785   */\n  add\n    /* \"#utility.yul\":758:791   */\n  gt\n    /* \"#utility.yul\":755:808   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":804:805   */\n  0x00\n    /* \"#utility.yul\":801:802   */\n  dup1\n    /* \"#utility.yul\":794:806   */\n  revert\n    /* \"#utility.yul\":755:808   */\ntag_31:\n    /* \"#utility.yul\":826:827   */\n  0x00\n    /* \"#utility.yul\":817:827   */\n  swap2\n  pop\n    /* \"#utility.yul\":836:969   */\ntag_32:\n    /* \"#utility.yul\":850:852   */\n  dup4\n    /* \"#utility.yul\":847:848   */\n  dup3\n    /* \"#utility.yul\":844:853   */\n  lt\n    /* \"#utility.yul\":836:969   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":938:952   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":934:957   */\n  dup4\n  add\n    /* \"#utility.yul\":928:958   */\n  mload\n    /* \"#utility.yul\":907:921   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":903:926   */\n  dup5\n  add\n    /* \"#utility.yul\":896:959   */\n  mstore\n    /* \"#utility.yul\":861:871   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":836:969   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":987:989   */\n  dup4\n    /* \"#utility.yul\":984:985   */\n  dup3\n    /* \"#utility.yul\":981:990   */\n  gt\n    /* \"#utility.yul\":978:1058   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1046:1047   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  dup4\n    /* \"#utility.yul\":1036:1038   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup4\n    /* \"#utility.yul\":1024:1039   */\n  add\n    /* \"#utility.yul\":1020:1044   */\n  add\n    /* \"#utility.yul\":1013:1048   */\n  mstore\n    /* \"#utility.yul\":978:1058   */\ntag_35:\n    /* \"#utility.yul\":1076:1082   */\n  swap7\n    /* \"#utility.yul\":203:1088   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1093:1655   */\ntag_3:\n    /* \"#utility.yul\":1192:1198   */\n  0x00\n    /* \"#utility.yul\":1200:1206   */\n  dup1\n    /* \"#utility.yul\":1253:1255   */\n  0x40\n    /* \"#utility.yul\":1241:1250   */\n  dup4\n    /* \"#utility.yul\":1232:1239   */\n  dup6\n    /* \"#utility.yul\":1228:1251   */\n  sub\n    /* \"#utility.yul\":1224:1256   */\n  slt\n    /* \"#utility.yul\":1221:1273   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1269:1270   */\n  0x00\n    /* \"#utility.yul\":1266:1267   */\n  dup1\n    /* \"#utility.yul\":1259:1271   */\n  revert\n    /* \"#utility.yul\":1221:1273   */\ntag_37:\n    /* \"#utility.yul\":1302:1311   */\n  dup3\n    /* \"#utility.yul\":1296:1312   */\n  mload\n  sub(exp(0x02, 0x40), 0x01)\n    /* \"#utility.yul\":1372:1374   */\n  dup1\n    /* \"#utility.yul\":1364:1370   */\n  dup3\n    /* \"#utility.yul\":1361:1375   */\n  gt\n    /* \"#utility.yul\":1358:1392   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1388:1389   */\n  0x00\n    /* \"#utility.yul\":1385:1386   */\n  dup1\n    /* \"#utility.yul\":1378:1390   */\n  revert\n    /* \"#utility.yul\":1358:1392   */\ntag_38:\n    /* \"#utility.yul\":1411:1472   */\n  tag_39\n    /* \"#utility.yul\":1464:1471   */\n  dup7\n    /* \"#utility.yul\":1455:1461   */\n  dup4\n    /* \"#utility.yul\":1444:1453   */\n  dup8\n    /* \"#utility.yul\":1440:1462   */\n  add\n    /* \"#utility.yul\":1411:1472   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1401:1472   */\n  swap4\n  pop\n    /* \"#utility.yul\":1518:1520   */\n  0x20\n    /* \"#utility.yul\":1507:1516   */\n  dup6\n    /* \"#utility.yul\":1503:1521   */\n  add\n    /* \"#utility.yul\":1497:1522   */\n  mload\n    /* \"#utility.yul\":1481:1522   */\n  swap2\n  pop\n    /* \"#utility.yul\":1547:1549   */\n  dup1\n    /* \"#utility.yul\":1537:1545   */\n  dup3\n    /* \"#utility.yul\":1534:1550   */\n  gt\n    /* \"#utility.yul\":1531:1567   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1563:1564   */\n  0x00\n    /* \"#utility.yul\":1560:1561   */\n  dup1\n    /* \"#utility.yul\":1553:1565   */\n  revert\n    /* \"#utility.yul\":1531:1567   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1586:1649   */\n  tag_41\n    /* \"#utility.yul\":1641:1648   */\n  dup6\n    /* \"#utility.yul\":1630:1638   */\n  dup3\n    /* \"#utility.yul\":1619:1628   */\n  dup7\n    /* \"#utility.yul\":1615:1639   */\n  add\n    /* \"#utility.yul\":1586:1649   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1576:1649   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1093:1655   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1660:2097   */\ntag_11:\n    /* \"#utility.yul\":1745:1746   */\n  0x02\n    /* \"#utility.yul\":1735:1747   */\n  dup2\n  div\n    /* \"#utility.yul\":1792:1793   */\n  0x01\n    /* \"#utility.yul\":1782:1794   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1803:1864   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1857:1861   */\n  0x7f\n    /* \"#utility.yul\":1849:1855   */\n  dup3\n    /* \"#utility.yul\":1845:1862   */\n  and\n    /* \"#utility.yul\":1835:1862   */\n  swap2\n  pop\n    /* \"#utility.yul\":1803:1864   */\ntag_43:\n    /* \"#utility.yul\":1910:1912   */\n  0x20\n    /* \"#utility.yul\":1902:1908   */\n  dup3\n    /* \"#utility.yul\":1899:1913   */\n  lt\n    /* \"#utility.yul\":1879:1897   */\n  dup2\n    /* \"#utility.yul\":1876:1914   */\n  eq\n    /* \"#utility.yul\":1873:2091   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1947:2024   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1944:1945   */\n  0x00\n    /* \"#utility.yul\":1937:2025   */\n  mstore\n    /* \"#utility.yul\":2048:2052   */\n  0x22\n    /* \"#utility.yul\":2045:2046   */\n  0x04\n    /* \"#utility.yul\":2038:2053   */\n  mstore\n    /* \"#utility.yul\":2076:2080   */\n  0x24\n    /* \"#utility.yul\":2073:2074   */\n  0x00\n    /* \"#utility.yul\":2066:2081   */\n  revert\n    /* \"#utility.yul\":1873:2091   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1660:2097   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1241:1255   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1234:1256   */\n      iszero\n        /* \"#utility.yul\":1216:1257   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1204:1206   */\n      0x20\n        /* \"#utility.yul\":1189:1207   */\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1076:1263   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1414:1439   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1402:1404   */\n      0x20\n        /* \"#utility.yul\":1387:1405   */\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1268:1445   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":1925:1961   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1913:1915   */\n      0x20\n        /* \"#utility.yul\":1898:1916   */\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1783:1967   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3341:3362   */\n      mstore\n        /* \"#utility.yul\":3398:3400   */\n      0x25\n        /* \"#utility.yul\":3378:3396   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3371:3401   */\n      mstore\n        /* \"#utility.yul\":3437:3471   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3417:3435   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3410:3472   */\n      mstore\n        /* \"#utility.yul\":3508:3515   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3488:3506   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3481:3516   */\n      mstore\n        /* \"#utility.yul\":3533:3552   */\n      0x84\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_74:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3765:3767   */\n      0x20\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3747:3768   */\n      mstore\n        /* \"#utility.yul\":3804:3806   */\n      0x24\n        /* \"#utility.yul\":3784:3802   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3777:3807   */\n      mstore\n        /* \"#utility.yul\":3843:3877   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3823:3841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3816:3878   */\n      mstore\n        /* \"#utility.yul\":3914:3920   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3894:3912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3887:3921   */\n      mstore\n        /* \"#utility.yul\":3938:3957   */\n      0x84\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3563:3963   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4170:4172   */\n      0x20\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4152:4173   */\n      mstore\n        /* \"#utility.yul\":4209:4211   */\n      0x22\n        /* \"#utility.yul\":4189:4207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4182:4212   */\n      mstore\n        /* \"#utility.yul\":4248:4282   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4228:4246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4221:4283   */\n      mstore\n        /* \"#utility.yul\":4319:4323   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4299:4317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4292:4324   */\n      mstore\n        /* \"#utility.yul\":4341:4360   */\n      0x84\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3968:4366   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1414:1439   */\n      dup5\n      dup2\n      mstore\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1387:1405   */\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_79:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      tag_117\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10928:10933  owner */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10935:10942  spender */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10927  allowance */\n      tag_61\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10943  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10973  currentAllowance */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      eq\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4573:4575   */\n      0x20\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4555:4576   */\n      mstore\n        /* \"#utility.yul\":4612:4614   */\n      0x1d\n        /* \"#utility.yul\":4592:4610   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4585:4615   */\n      mstore\n        /* \"#utility.yul\":4651:4682   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4631:4649   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4624:4683   */\n      mstore\n        /* \"#utility.yul\":4700:4718   */\n      0x64\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4371:4724   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_74\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_81:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4931:4933   */\n      0x20\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4913:4934   */\n      mstore\n        /* \"#utility.yul\":4970:4972   */\n      0x25\n        /* \"#utility.yul\":4950:4968   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4943:4973   */\n      mstore\n        /* \"#utility.yul\":5009:5043   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4989:5007   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4982:5044   */\n      mstore\n        /* \"#utility.yul\":5080:5087   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5060:5078   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5053:5088   */\n      mstore\n        /* \"#utility.yul\":5105:5124   */\n      0x84\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4729:5130   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":5337:5339   */\n      0x20\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5319:5340   */\n      mstore\n        /* \"#utility.yul\":5376:5378   */\n      0x23\n        /* \"#utility.yul\":5356:5374   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5349:5379   */\n      mstore\n        /* \"#utility.yul\":5415:5449   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5395:5413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5388:5450   */\n      mstore\n        /* \"#utility.yul\":5486:5491   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5466:5484   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5459:5492   */\n      mstore\n        /* \"#utility.yul\":5509:5528   */\n      0x84\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":5135:5534   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":5741:5743   */\n      0x20\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5723:5744   */\n      mstore\n        /* \"#utility.yul\":5780:5782   */\n      0x26\n        /* \"#utility.yul\":5760:5778   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5753:5783   */\n      mstore\n        /* \"#utility.yul\":5819:5853   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5799:5817   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5792:5854   */\n      mstore\n        /* \"#utility.yul\":5890:5898   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5870:5888   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5863:5899   */\n      mstore\n        /* \"#utility.yul\":5916:5935   */\n      0x84\n      add\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5539:5941   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1414:1439   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1402:1404   */\n      0x20\n        /* \"#utility.yul\":1387:1405   */\n      add\n      swap1\n        /* \"#utility.yul\":1268:1445   */\n      jump\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:812   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":733:787   */\n      dup2\n      and\n        /* \"#utility.yul\":723:788   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:806   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":799:800   */\n      dup1\n        /* \"#utility.yul\":792:804   */\n      revert\n        /* \"#utility.yul\":713:806   */\n    tag_149:\n        /* \"#utility.yul\":616:812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":817:1071   */\n    tag_21:\n        /* \"#utility.yul\":885:891   */\n      0x00\n        /* \"#utility.yul\":893:899   */\n      dup1\n        /* \"#utility.yul\":946:948   */\n      0x40\n        /* \"#utility.yul\":934:943   */\n      dup4\n        /* \"#utility.yul\":925:932   */\n      dup6\n        /* \"#utility.yul\":921:944   */\n      sub\n        /* \"#utility.yul\":917:949   */\n      slt\n        /* \"#utility.yul\":914:966   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":962:963   */\n      0x00\n        /* \"#utility.yul\":959:960   */\n      dup1\n        /* \"#utility.yul\":952:964   */\n      revert\n        /* \"#utility.yul\":914:966   */\n    tag_151:\n        /* \"#utility.yul\":985:1014   */\n      tag_152\n        /* \"#utility.yul\":1004:1013   */\n      dup4\n        /* \"#utility.yul\":985:1014   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":975:1014   */\n      swap5\n        /* \"#utility.yul\":1061:1063   */\n      0x20\n        /* \"#utility.yul\":1046:1064   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1033:1065   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":817:1071   */\n      jump\t// out\n        /* \"#utility.yul\":1450:1778   */\n    tag_31:\n        /* \"#utility.yul\":1527:1533   */\n      0x00\n        /* \"#utility.yul\":1535:1541   */\n      dup1\n        /* \"#utility.yul\":1543:1549   */\n      0x00\n        /* \"#utility.yul\":1596:1598   */\n      0x60\n        /* \"#utility.yul\":1584:1593   */\n      dup5\n        /* \"#utility.yul\":1575:1582   */\n      dup7\n        /* \"#utility.yul\":1571:1594   */\n      sub\n        /* \"#utility.yul\":1567:1599   */\n      slt\n        /* \"#utility.yul\":1564:1616   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1612:1613   */\n      0x00\n        /* \"#utility.yul\":1609:1610   */\n      dup1\n        /* \"#utility.yul\":1602:1614   */\n      revert\n        /* \"#utility.yul\":1564:1616   */\n    tag_156:\n        /* \"#utility.yul\":1635:1664   */\n      tag_157\n        /* \"#utility.yul\":1654:1663   */\n      dup5\n        /* \"#utility.yul\":1635:1664   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1625:1664   */\n      swap3\n      pop\n        /* \"#utility.yul\":1683:1721   */\n      tag_158\n        /* \"#utility.yul\":1717:1719   */\n      0x20\n        /* \"#utility.yul\":1706:1715   */\n      dup6\n        /* \"#utility.yul\":1702:1720   */\n      add\n        /* \"#utility.yul\":1683:1721   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1673:1721   */\n      swap2\n      pop\n        /* \"#utility.yul\":1768:1770   */\n      0x40\n        /* \"#utility.yul\":1757:1766   */\n      dup5\n        /* \"#utility.yul\":1753:1771   */\n      add\n        /* \"#utility.yul\":1740:1772   */\n      calldataload\n        /* \"#utility.yul\":1730:1772   */\n      swap1\n      pop\n        /* \"#utility.yul\":1450:1778   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1972:2158   */\n    tag_44:\n        /* \"#utility.yul\":2031:2037   */\n      0x00\n        /* \"#utility.yul\":2084:2086   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup3\n        /* \"#utility.yul\":2063:2070   */\n      dup5\n        /* \"#utility.yul\":2059:2082   */\n      sub\n        /* \"#utility.yul\":2055:2087   */\n      slt\n        /* \"#utility.yul\":2052:2104   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2100:2101   */\n      0x00\n        /* \"#utility.yul\":2097:2098   */\n      dup1\n        /* \"#utility.yul\":2090:2102   */\n      revert\n        /* \"#utility.yul\":2052:2104   */\n    tag_161:\n        /* \"#utility.yul\":2123:2152   */\n      tag_162\n        /* \"#utility.yul\":2142:2151   */\n      dup3\n        /* \"#utility.yul\":2123:2152   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2113:2152   */\n      swap4\n        /* \"#utility.yul\":1972:2158   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2163:2423   */\n    tag_60:\n        /* \"#utility.yul\":2231:2237   */\n      0x00\n        /* \"#utility.yul\":2239:2245   */\n      dup1\n        /* \"#utility.yul\":2292:2294   */\n      0x40\n        /* \"#utility.yul\":2280:2289   */\n      dup4\n        /* \"#utility.yul\":2271:2278   */\n      dup6\n        /* \"#utility.yul\":2267:2290   */\n      sub\n        /* \"#utility.yul\":2263:2295   */\n      slt\n        /* \"#utility.yul\":2260:2312   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2308:2309   */\n      0x00\n        /* \"#utility.yul\":2305:2306   */\n      dup1\n        /* \"#utility.yul\":2298:2310   */\n      revert\n        /* \"#utility.yul\":2260:2312   */\n    tag_164:\n        /* \"#utility.yul\":2331:2360   */\n      tag_165\n        /* \"#utility.yul\":2350:2359   */\n      dup4\n        /* \"#utility.yul\":2331:2360   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2321:2360   */\n      swap2\n      pop\n        /* \"#utility.yul\":2379:2417   */\n      tag_166\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2402:2411   */\n      dup5\n        /* \"#utility.yul\":2398:2416   */\n      add\n        /* \"#utility.yul\":2379:2417   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2369:2417   */\n      swap1\n      pop\n        /* \"#utility.yul\":2163:2423   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2865   */\n    tag_65:\n        /* \"#utility.yul\":2513:2514   */\n      0x02\n        /* \"#utility.yul\":2503:2515   */\n      dup2\n      div\n        /* \"#utility.yul\":2560:2561   */\n      0x01\n        /* \"#utility.yul\":2550:2562   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2571:2632   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2625:2629   */\n      0x7f\n        /* \"#utility.yul\":2617:2623   */\n      dup3\n        /* \"#utility.yul\":2613:2630   */\n      and\n        /* \"#utility.yul\":2603:2630   */\n      swap2\n      pop\n        /* \"#utility.yul\":2571:2632   */\n    tag_168:\n        /* \"#utility.yul\":2678:2680   */\n      0x20\n        /* \"#utility.yul\":2670:2676   */\n      dup3\n        /* \"#utility.yul\":2667:2681   */\n      lt\n        /* \"#utility.yul\":2647:2665   */\n      dup2\n        /* \"#utility.yul\":2644:2682   */\n      eq\n        /* \"#utility.yul\":2641:2859   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2715:2792   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2793   */\n      mstore\n        /* \"#utility.yul\":2816:2820   */\n      0x22\n        /* \"#utility.yul\":2813:2814   */\n      0x04\n        /* \"#utility.yul\":2806:2821   */\n      mstore\n        /* \"#utility.yul\":2844:2848   */\n      0x24\n        /* \"#utility.yul\":2841:2842   */\n      0x00\n        /* \"#utility.yul\":2834:2849   */\n      revert\n        /* \"#utility.yul\":2641:2859   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2428:2865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2870:3152   */\n    tag_88:\n        /* \"#utility.yul\":2910:2913   */\n      0x00\n        /* \"#utility.yul\":2941:2942   */\n      dup3\n        /* \"#utility.yul\":2937:2943   */\n      not\n        /* \"#utility.yul\":2934:2935   */\n      dup3\n        /* \"#utility.yul\":2931:2944   */\n      gt\n        /* \"#utility.yul\":2928:3121   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2977:3054   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2974:2975   */\n      0x00\n        /* \"#utility.yul\":2967:3055   */\n      mstore\n        /* \"#utility.yul\":3078:3082   */\n      0x11\n        /* \"#utility.yul\":3075:3076   */\n      0x04\n        /* \"#utility.yul\":3068:3083   */\n      mstore\n        /* \"#utility.yul\":3106:3110   */\n      0x24\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3096:3111   */\n      revert\n        /* \"#utility.yul\":2928:3121   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3137:3146   */\n      add\n      swap1\n        /* \"#utility.yul\":2870:3152   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f3f3d23e03be564623ab48b84da994eee898ff97fb916c8745e4bf68adb0e23a64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2099:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "66:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "163:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "153:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "153:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "153:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "184:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "187:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "177:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:821:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "316:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "325:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "328:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "318:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "318:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "318:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "295:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "303:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "291:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "291:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "310:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "287:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "287:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "280:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "280:35:4"
															},
															"nodeType": "YulIf",
															"src": "277:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "341:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "357:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "351:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "351:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "345:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "373:28:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "383:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "377:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "424:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "426:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "426:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "426:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "416:2:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "420:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "413:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "413:10:4"
															},
															"nodeType": "YulIf",
															"src": "410:36:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "455:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "469:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "465:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:7:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "459:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "481:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "501:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "495:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "485:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "513:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "535:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "559:2:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "563:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "555:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "555:13:4"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "570:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "551:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "551:22:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "575:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "547:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "547:31:4"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "580:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "543:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "543:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "531:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "531:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "517:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "643:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "645:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "645:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "645:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "602:10:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "614:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "599:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "622:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "634:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "619:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "619:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "596:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:46:4"
															},
															"nodeType": "YulIf",
															"src": "593:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "681:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "685:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "674:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "712:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "720:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:18:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "705:18:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "732:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "742:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "736:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "792:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "801:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "804:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "794:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "794:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "794:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "769:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "777:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "765:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "765:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "782:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "761:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "761:24:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "787:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "758:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "758:33:4"
															},
															"nodeType": "YulIf",
															"src": "755:53:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "817:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "826:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "821:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "882:87:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "911:6:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "919:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "907:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "907:14:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "923:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "903:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "903:23:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "942:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "950:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "938:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "938:14:4"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "954:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "934:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "934:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "928:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "928:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "896:63:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "896:63:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "847:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "850:2:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "844:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:9:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "854:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "856:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "865:1:4"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "868:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "861:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "861:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "856:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "840:3:4",
																"statements": []
															},
															"src": "836:133:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "999:59:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1028:6:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1036:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1024:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1024:15:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1041:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1020:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1020:24:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1046:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1013:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1013:35:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1013:35:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "984:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "987:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "981:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "981:9:4"
															},
															"nodeType": "YulIf",
															"src": "978:80:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1067:15:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1076:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1067:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "241:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "249:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "257:5:4",
														"type": ""
													}
												],
												"src": "203:885:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:444:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1257:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1266:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1269:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1259:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1259:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1259:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1232:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1241:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1228:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1228:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1253:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1224:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:32:4"
															},
															"nodeType": "YulIf",
															"src": "1221:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1282:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1302:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1296:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1286:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1321:28:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1331:18:4",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1325:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1364:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1372:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1361:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:14:4"
															},
															"nodeType": "YulIf",
															"src": "1358:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1401:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1444:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1464:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1411:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1481:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1507:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1518:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1503:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1503:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1497:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1485:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1560:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1553:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1537:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1547:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1534:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1534:16:4"
															},
															"nodeType": "YulIf",
															"src": "1531:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1576:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1641:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1586:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1169:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1180:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1192:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1200:6:4",
														"type": ""
													}
												],
												"src": "1093:562:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1715:382:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1725:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1739:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1756:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1792:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1760:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1833:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1835:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1849:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1845:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1845:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1813:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:26:4"
															},
															"nodeType": "YulIf",
															"src": "1803:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1923:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1944:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1947:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1937:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1937:88:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1937:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2048:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2038:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2038:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2076:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2066:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2066:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1879:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1910:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1876:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:38:4"
															},
															"nodeType": "YulIf",
															"src": "1873:218:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1695:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1704:6:4",
														"type": ""
													}
												],
												"src": "1660:437:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000c4438038062000c448339810160408190526200003491620001f4565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b505050620002b4565b82805462000076906200025e565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126200014f57600080fd5b81516001604060020a03808211156200016c576200016c6200010e565b604051601f8301601f19908116603f011681019082821181831017156200019757620001976200010e565b81604052838152602092508683858801011115620001b457600080fd5b600091505b83821015620001d85785820183015181830184015290820190620001b9565b83821115620001ea5760008385830101525b9695505050505050565b600080604083850312156200020857600080fd5b82516001604060020a03808211156200022057600080fd5b6200022e868387016200013d565b935060208501519150808211156200024557600080fd5b5062000254858286016200013d565b9150509250929050565b6002810460018216806200027357607f821691505b60208210811415620002ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b61098080620002c46000396000f3fe608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e578063395093511461014057806370a082311461015357806395d89b411461017c578063a457c2d714610184578063a9059cbb14610197578063dd62ed3e146101aa57600080fd5b806306fdde03146100cb578063095ea7b3146100e957806318160ddd1461010c57806323b872dd1461011e578063313ce56714610131575b600080fd5b6100d36101bd565b6040516100e0919061078b565b60405180910390f35b6100fc6100f73660046107fc565b61024f565b60405190151581526020016100e0565b6002545b6040519081526020016100e0565b6100fc61012c366004610826565b610267565b604051601281526020016100e0565b6100fc61014e3660046107fc565b61028b565b610110610161366004610862565b600160a060020a031660009081526020819052604090205490565b6100d36102ad565b6100fc6101923660046107fc565b6102bc565b6100fc6101a53660046107fc565b610357565b6101106101b8366004610884565b610365565b6060600380546101cc906108b7565b80601f01602080910402602001604051908101604052809291908181526020018280546101f8906108b7565b80156102455780601f1061021a57610100808354040283529160200191610245565b820191906000526020600020905b81548152906001019060200180831161022857829003601f168201915b5050505050905090565b60003361025d818585610390565b5060019392505050565b6000336102758582856104ee565b61028085858561056b565b506001949350505050565b60003361025d81858561029e8383610365565b6102a8919061090b565b610390565b6060600480546101cc906108b7565b600033816102ca8286610365565b90508381101561034a5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102808286868403610390565b60003361025d81858561056b565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a03831661040e5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a03821661048d5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104fa8484610365565b9050600019811461056557818110156105585760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610341565b6105658484848403610390565b50505050565b600160a060020a0383166105ea5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a0382166106695760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a038316600090815260208190526040902054818110156106fb5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a0380851660009081526020819052604080822085850390559185168152908120805484929061073290849061090b565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161077e91815260200190565b60405180910390a3610565565b600060208083528351808285015260005b818110156107b85785810183015185820160400152820161079c565b818111156107ca576000604083870101525b50601f01601f1916929092016040019392505050565b8035600160a060020a03811681146107f757600080fd5b919050565b6000806040838503121561080f57600080fd5b610818836107e0565b946020939093013593505050565b60008060006060848603121561083b57600080fd5b610844846107e0565b9250610852602085016107e0565b9150604084013590509250925092565b60006020828403121561087457600080fd5b61087d826107e0565b9392505050565b6000806040838503121561089757600080fd5b6108a0836107e0565b91506108ae602084016107e0565b90509250929050565b6002810460018216806108cb57607f821691505b60208210811415610905577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008219821115610945577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220f3f3d23e03be564623ab48b84da994eee898ff97fb916c8745e4bf68adb0e23a64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC44 CODESIZE SUB DUP1 PUSH3 0xC44 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1F4 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x2B4 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x25E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH3 0x16C PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x197 JUMPI PUSH3 0x197 PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1D8 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1B9 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1EA JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP1 DUP3 GT ISZERO PUSH3 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x22E DUP7 DUP4 DUP8 ADD PUSH3 0x13D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x254 DUP6 DUP3 DUP7 ADD PUSH3 0x13D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x273 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2AE JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x980 DUP1 PUSH3 0x2C4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x39509351 GT PUSH2 0x8E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH2 0x110 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0xFC PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CC SWAP1 PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F8 SWAP1 PUSH2 0x8B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x245 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x245 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x228 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25D DUP2 DUP6 DUP6 PUSH2 0x390 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x275 DUP6 DUP3 DUP6 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x280 DUP6 DUP6 DUP6 PUSH2 0x56B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25D DUP2 DUP6 DUP6 PUSH2 0x29E DUP4 DUP4 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CC SWAP1 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2CA DUP3 DUP7 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x280 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25D DUP2 DUP6 DUP6 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA DUP5 DUP5 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x565 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x565 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x390 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x732 SWAP1 DUP5 SWAP1 PUSH2 0x90B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x77E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7B8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x79C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x818 DUP4 PUSH2 0x7E0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x844 DUP5 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x852 PUSH1 0x20 DUP6 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87D DUP3 PUSH2 0x7E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A0 DUP4 PUSH2 0x7E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x8AE PUSH1 0x20 DUP5 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x8CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x905 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x945 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN RETURN 0xD2 RETURNDATACOPY SUB 0xBE JUMP CHAINID 0x23 0xAB BASEFEE 0xB8 0x4D 0xA9 SWAP5 0xEE 0xE8 SWAP9 SELFDESTRUCT SWAP8 0xFB SWAP2 PUSH13 0x8745E4BF68ADB0E23A64736F6C PUSH4 0x43000809 STOP CALLER ",
							"sourceMap": "1403:11214:0:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11214;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11214:0;;;-1:-1:-1;1403:11214:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:4;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:885;257:5;310:3;303:4;295:6;291:17;287:27;277:55;;328:1;325;318:12;277:55;357:6;351:13;-1:-1:-1;;;;;420:2:4;416;413:10;410:36;;;426:18;;:::i;:::-;501:2;495:9;469:2;555:13;;-1:-1:-1;;551:22:4;;;575:2;547:31;543:40;531:53;;;599:18;;;619:22;;;596:46;593:72;;;645:18;;:::i;:::-;685:10;681:2;674:22;720:2;712:6;705:18;742:4;732:14;;787:3;782:2;777;769:6;765:15;761:24;758:33;755:53;;;804:1;801;794:12;755:53;826:1;817:10;;836:133;850:2;847:1;844:9;836:133;;;938:14;;;934:23;;928:30;907:14;;;903:23;;896:63;861:10;;;;836:133;;;987:2;984:1;981:9;978:80;;;1046:1;1041:2;1036;1028:6;1024:15;1020:24;1013:35;978:80;1076:6;203:885;-1:-1:-1;;;;;;203:885:4:o;1093:562::-;1192:6;1200;1253:2;1241:9;1232:7;1228:23;1224:32;1221:52;;;1269:1;1266;1259:12;1221:52;1302:9;1296:16;-1:-1:-1;;;;;1372:2:4;1364:6;1361:14;1358:34;;;1388:1;1385;1378:12;1358:34;1411:61;1464:7;1455:6;1444:9;1440:22;1411:61;:::i;:::-;1401:71;;1518:2;1507:9;1503:18;1497:25;1481:41;;1547:2;1537:8;1534:16;1531:36;;;1563:1;1560;1553:12;1531:36;;1586:63;1641:7;1630:8;1619:9;1615:24;1586:63;:::i;:::-;1576:73;;;1093:562;;;;;:::o;1660:437::-;1745:1;1735:12;;1792:1;1782:12;;;1803:61;;1857:4;1849:6;1845:17;1835:27;;1803:61;1910:2;1902:6;1899:14;1879:18;1876:38;1873:218;;;1947:77;1944:1;1937:88;2048:4;2045:1;2038:15;2076:4;2073:1;2066:15;1873:218;;1660:437;;;:::o;:::-;1403:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 912,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1262,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1387,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 869,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 591,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 700,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 651,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 445,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 685,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 615,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 855,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5943:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:4",
																"statements": []
															},
															"src": "294:140:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:4"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:4"
															},
															"nodeType": "YulIf",
															"src": "443:91:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:4",
														"type": ""
													}
												],
												"src": "14:597:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "790:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "799:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "802:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "792:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "792:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "792:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "744:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:73:4"
															},
															"nodeType": "YulIf",
															"src": "713:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:4",
														"type": ""
													}
												],
												"src": "616:196:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "904:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "950:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "959:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "962:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "952:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "952:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "952:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "925:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "921:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "921:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "917:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "917:32:4"
															},
															"nodeType": "YulIf",
															"src": "914:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "975:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1004:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "985:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "985:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "975:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1023:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1050:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1061:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1046:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1033:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1023:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "862:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "873:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "885:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "893:6:4",
														"type": ""
													}
												],
												"src": "817:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1171:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1181:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1193:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1204:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1189:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1181:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1223:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1248:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1241:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1241:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1234:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1234:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1216:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1216:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1140:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1151:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1162:4:4",
														"type": ""
													}
												],
												"src": "1076:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1369:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1379:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1391:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1402:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1387:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1387:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1379:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1421:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1432:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1414:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1338:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1349:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1360:4:4",
														"type": ""
													}
												],
												"src": "1268:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:224:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1600:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1609:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1612:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1602:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1602:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1602:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1575:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1571:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1567:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:32:4"
															},
															"nodeType": "YulIf",
															"src": "1564:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1625:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1654:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1635:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1625:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1673:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1706:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1717:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1702:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1702:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1683:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1730:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1757:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1768:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1753:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1753:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1740:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1730:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1504:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1515:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1527:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1535:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1543:6:4",
														"type": ""
													}
												],
												"src": "1450:328:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1880:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1890:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1902:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1913:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1898:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1890:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1932:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1947:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1955:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1849:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1860:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1871:4:4",
														"type": ""
													}
												],
												"src": "1783:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2042:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2088:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2097:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2100:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2090:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2090:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2090:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2063:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2059:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2059:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2055:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:32:4"
															},
															"nodeType": "YulIf",
															"src": "2052:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2142:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2123:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2123:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2008:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2019:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2031:6:4",
														"type": ""
													}
												],
												"src": "1972:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:173:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2296:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2305:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2308:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2298:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2298:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2298:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2271:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2280:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2267:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2267:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2292:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2263:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:32:4"
															},
															"nodeType": "YulIf",
															"src": "2260:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2321:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2350:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2331:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2321:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2369:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2402:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2413:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2398:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2398:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2379:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2379:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2369:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2219:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2231:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2239:6:4",
														"type": ""
													}
												],
												"src": "2163:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2483:382:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2493:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2507:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2513:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2503:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2524:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2554:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2550:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2528:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2601:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2603:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2617:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2625:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2613:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2613:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2603:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2581:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2574:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2574:26:4"
															},
															"nodeType": "YulIf",
															"src": "2571:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2691:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:88:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2813:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2806:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2806:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2841:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2844:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2834:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2834:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2834:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2647:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2670:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2667:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2667:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2644:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:38:4"
															},
															"nodeType": "YulIf",
															"src": "2641:218:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2463:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2472:6:4",
														"type": ""
													}
												],
												"src": "2428:437:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2918:234:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2953:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2974:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2977:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2967:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2967:88:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2967:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3075:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3078:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3068:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3068:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3068:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3106:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3096:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3096:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3096:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2934:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2941:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2937:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2937:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2931:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:13:4"
															},
															"nodeType": "YulIf",
															"src": "2928:193:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3130:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3141:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3144:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3137:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3137:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3130:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2901:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2904:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2910:3:4",
														"type": ""
													}
												],
												"src": "2870:282:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3331:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3341:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3341:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3382:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3393:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3378:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3378:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3371:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3432:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3417:18:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3437:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3410:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3503:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3488:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3488:18:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3508:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3481:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3525:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3537:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3548:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3533:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3525:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3308:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3322:4:4",
														"type": ""
													}
												],
												"src": "3157:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3737:226:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3754:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3765:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3747:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3747:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3747:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3788:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3799:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3784:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3784:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3777:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3838:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:18:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3843:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3816:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3816:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3898:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3909:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3894:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3894:18:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3914:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3887:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3887:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3887:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3930:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3942:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3938:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3938:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3930:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3714:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3728:4:4",
														"type": ""
													}
												],
												"src": "3563:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4142:224:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4159:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4170:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4152:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4193:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4204:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4189:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4189:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4209:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4182:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4182:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4232:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4243:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4228:18:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4248:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4221:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4221:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4303:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4314:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4299:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4299:18:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4319:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4292:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4333:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4345:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4356:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4341:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4341:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4333:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4119:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4133:4:4",
														"type": ""
													}
												],
												"src": "3968:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4545:179:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4562:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4573:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4555:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4555:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4555:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4596:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4607:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4592:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4592:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4612:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4585:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4635:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4646:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4631:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:18:4"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4651:31:4",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4624:59:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4624:59:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4704:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4715:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4700:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4700:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4692:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4522:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4536:4:4",
														"type": ""
													}
												],
												"src": "4371:353:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4903:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4913:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4913:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4913:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4954:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4965:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4950:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4970:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4943:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4943:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4993:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5004:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4989:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4989:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5009:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4982:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4982:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4982:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5064:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5075:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5060:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5060:18:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5080:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5053:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5053:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5053:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5097:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5109:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5120:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5105:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5105:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5097:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4880:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4894:4:4",
														"type": ""
													}
												],
												"src": "4729:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5309:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5326:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5337:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5319:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5360:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5371:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5356:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5376:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5349:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5399:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5410:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5395:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5415:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5388:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5388:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5388:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5470:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5466:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5466:18:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5486:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5459:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5501:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5513:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5524:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5509:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5509:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5501:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5286:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5300:4:4",
														"type": ""
													}
												],
												"src": "5135:399:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5713:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5730:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5741:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5723:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5723:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5723:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5764:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5775:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5760:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5760:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5753:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5803:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5814:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5799:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5799:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5819:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5792:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5874:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5885:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5870:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5870:18:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5890:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5863:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5863:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5863:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5908:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5920:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5931:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5916:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5908:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5690:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5704:4:4",
														"type": ""
													}
												],
												"src": "5539:402:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e578063395093511461014057806370a082311461015357806395d89b411461017c578063a457c2d714610184578063a9059cbb14610197578063dd62ed3e146101aa57600080fd5b806306fdde03146100cb578063095ea7b3146100e957806318160ddd1461010c57806323b872dd1461011e578063313ce56714610131575b600080fd5b6100d36101bd565b6040516100e0919061078b565b60405180910390f35b6100fc6100f73660046107fc565b61024f565b60405190151581526020016100e0565b6002545b6040519081526020016100e0565b6100fc61012c366004610826565b610267565b604051601281526020016100e0565b6100fc61014e3660046107fc565b61028b565b610110610161366004610862565b600160a060020a031660009081526020819052604090205490565b6100d36102ad565b6100fc6101923660046107fc565b6102bc565b6100fc6101a53660046107fc565b610357565b6101106101b8366004610884565b610365565b6060600380546101cc906108b7565b80601f01602080910402602001604051908101604052809291908181526020018280546101f8906108b7565b80156102455780601f1061021a57610100808354040283529160200191610245565b820191906000526020600020905b81548152906001019060200180831161022857829003601f168201915b5050505050905090565b60003361025d818585610390565b5060019392505050565b6000336102758582856104ee565b61028085858561056b565b506001949350505050565b60003361025d81858561029e8383610365565b6102a8919061090b565b610390565b6060600480546101cc906108b7565b600033816102ca8286610365565b90508381101561034a5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102808286868403610390565b60003361025d81858561056b565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a03831661040e5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a03821661048d5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104fa8484610365565b9050600019811461056557818110156105585760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610341565b6105658484848403610390565b50505050565b600160a060020a0383166105ea5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a0382166106695760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a038316600090815260208190526040902054818110156106fb5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610341565b600160a060020a0380851660009081526020819052604080822085850390559185168152908120805484929061073290849061090b565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161077e91815260200190565b60405180910390a3610565565b600060208083528351808285015260005b818110156107b85785810183015185820160400152820161079c565b818111156107ca576000604083870101525b50601f01601f1916929092016040019392505050565b8035600160a060020a03811681146107f757600080fd5b919050565b6000806040838503121561080f57600080fd5b610818836107e0565b946020939093013593505050565b60008060006060848603121561083b57600080fd5b610844846107e0565b9250610852602085016107e0565b9150604084013590509250925092565b60006020828403121561087457600080fd5b61087d826107e0565b9392505050565b6000806040838503121561089757600080fd5b6108a0836107e0565b91506108ae602084016107e0565b90509250929050565b6002810460018216806108cb57607f821691505b60208210811415610905577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008219821115610945577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220f3f3d23e03be564623ab48b84da994eee898ff97fb916c8745e4bf68adb0e23a64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x39509351 GT PUSH2 0x8E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x24F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x826 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH2 0x110 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0xFC PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1CC SWAP1 PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F8 SWAP1 PUSH2 0x8B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x245 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x245 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x228 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25D DUP2 DUP6 DUP6 PUSH2 0x390 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x275 DUP6 DUP3 DUP6 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x280 DUP6 DUP6 DUP6 PUSH2 0x56B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25D DUP2 DUP6 DUP6 PUSH2 0x29E DUP4 DUP4 PUSH2 0x365 JUMP JUMPDEST PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1CC SWAP1 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2CA DUP3 DUP7 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x280 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25D DUP2 DUP6 DUP6 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FA DUP5 DUP5 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x565 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x341 JUMP JUMPDEST PUSH2 0x565 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x390 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x732 SWAP1 DUP5 SWAP1 PUSH2 0x90B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x77E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7B8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x79C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x818 DUP4 PUSH2 0x7E0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x844 DUP5 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x852 PUSH1 0x20 DUP6 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87D DUP3 PUSH2 0x7E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A0 DUP4 PUSH2 0x7E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x8AE PUSH1 0x20 DUP5 ADD PUSH2 0x7E0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x8CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x905 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x945 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN RETURN 0xD2 RETURNDATACOPY SUB 0xBE JUMP CHAINID 0x23 0xAB BASEFEE 0xB8 0x4D 0xA9 SWAP5 0xEE 0xE8 SWAP9 SELFDESTRUCT SWAP8 0xFB SWAP2 PUSH13 0x8745E4BF68ADB0E23A64736F6C PUSH4 0x43000809 STOP CALLER ",
							"sourceMap": "1403:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1241:14:4;;1234:22;1216:41;;1204:2;1189:18;4433:197:0;1076:187:4;3244:106:0;3331:12;;3244:106;;;1414:25:4;;;1402:2;1387:18;3244:106:0;1268:177:4;5192:286:0;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1925:36:4;;1913:2;1898:18;3093:91:0;1783:184:4;5873:234:0;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:234::-;5961:4;719:10:3;6015:64:0;719:10:3;6031:7:0;6068:10;6040:25;719:10:3;6031:7:0;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:3;6687:4:0;6768:25;719:10:3;6785:7:0;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;;;6803:85:0;;3359:2:4;6803:85:0;;;3341:21:4;3398:2;3378:18;;;3371:30;3437:34;3417:18;;;3410:62;3508:7;3488:18;;;3481:35;3533:19;;6803:85:0;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10110:370::-;-1:-1:-1;;;;;10241:19:0;;10233:68;;;;-1:-1:-1;;;;;10233:68:0;;3765:2:4;10233:68:0;;;3747:21:4;3804:2;3784:18;;;3777:30;3843:34;3823:18;;;3816:62;3914:6;3894:18;;;3887:34;3938:19;;10233:68:0;3563:400:4;10233:68:0;-1:-1:-1;;;;;10319:21:0;;10311:68;;;;-1:-1:-1;;;;;10311:68:0;;4170:2:4;10311:68:0;;;4152:21:4;4209:2;4189:18;;;4182:30;4248:34;4228:18;;;4221:62;4319:4;4299:18;;;4292:32;4341:19;;10311:68:0;3968:398:4;10311:68:0;-1:-1:-1;;;;;10390:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1414:25:4;;;10441:32:0;;1387:18:4;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:0;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;;;11010:68:0;;4573:2:4;11010:68:0;;;4555:21:4;4612:2;4592:18;;;4585:30;4651:31;4631:18;;;4624:59;4700:18;;11010:68:0;4371:353:4;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:0;;7593:68;;;;-1:-1:-1;;;;;7593:68:0;;4931:2:4;7593:68:0;;;4913:21:4;4970:2;4950:18;;;4943:30;5009:34;4989:18;;;4982:62;5080:7;5060:18;;;5053:35;5105:19;;7593:68:0;4729:401:4;7593:68:0;-1:-1:-1;;;;;7679:16:0;;7671:64;;;;-1:-1:-1;;;;;7671:64:0;;5337:2:4;7671:64:0;;;5319:21:4;5376:2;5356:18;;;5349:30;5415:34;5395:18;;;5388:62;5486:5;5466:18;;;5459:33;5509:19;;7671:64:0;5135:399:4;7671:64:0;-1:-1:-1;;;;;7817:15:0;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;;;7842:72:0;;5741:2:4;7842:72:0;;;5723:21:4;5780:2;5760:18;;;5753:30;5819:34;5799:18;;;5792:62;5890:8;5870:18;;;5863:36;5916:19;;7842:72:0;5539:402:4;7842:72:0;-1:-1:-1;;;;;7948:15:0;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:0;8054:4;-1:-1:-1;;;;;8045:26:0;;8064:6;8045:26;;;;1414:25:4;;1402:2;1387:18;;1268:177;8045:26:0;;;;;;;;8082:37;11786:121;14:597:4;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:4;574:15;-1:-1:-1;;570:29:4;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:4:o;616:196::-;684:20;;-1:-1:-1;;;;;733:54:4;;723:65;;713:93;;802:1;799;792:12;713:93;616:196;;;:::o;817:254::-;885:6;893;946:2;934:9;925:7;921:23;917:32;914:52;;;962:1;959;952:12;914:52;985:29;1004:9;985:29;:::i;:::-;975:39;1061:2;1046:18;;;;1033:32;;-1:-1:-1;;;817:254:4:o;1450:328::-;1527:6;1535;1543;1596:2;1584:9;1575:7;1571:23;1567:32;1564:52;;;1612:1;1609;1602:12;1564:52;1635:29;1654:9;1635:29;:::i;:::-;1625:39;;1683:38;1717:2;1706:9;1702:18;1683:38;:::i;:::-;1673:48;;1768:2;1757:9;1753:18;1740:32;1730:42;;1450:328;;;;;:::o;1972:186::-;2031:6;2084:2;2072:9;2063:7;2059:23;2055:32;2052:52;;;2100:1;2097;2090:12;2052:52;2123:29;2142:9;2123:29;:::i;:::-;2113:39;1972:186;-1:-1:-1;;;1972:186:4:o;2163:260::-;2231:6;2239;2292:2;2280:9;2271:7;2267:23;2263:32;2260:52;;;2308:1;2305;2298:12;2260:52;2331:29;2350:9;2331:29;:::i;:::-;2321:39;;2379:38;2413:2;2402:9;2398:18;2379:38;:::i;:::-;2369:48;;2163:260;;;;;:::o;2428:437::-;2513:1;2503:12;;2560:1;2550:12;;;2571:61;;2625:4;2617:6;2613:17;2603:27;;2571:61;2678:2;2670:6;2667:14;2647:18;2644:38;2641:218;;;2715:77;2712:1;2705:88;2816:4;2813:1;2806:15;2844:4;2841:1;2834:15;2641:218;;2428:437;;;:::o;2870:282::-;2910:3;2941:1;2937:6;2934:1;2931:13;2928:193;;;2977:77;2974:1;2967:88;3078:4;3075:1;3068:15;3106:4;3103:1;3096:15;2928:193;-1:-1:-1;3137:9:4;;2870:282::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "486400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22757",
								"balanceOf(address)": "781",
								"decimals()": "271",
								"decreaseAllowance(address,uint256)": "23306",
								"increaseAllowance(address,uint256)": "23268",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "431",
								"transfer(address,uint256)": "43674",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 66,
									"end": 143,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 144,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 163,
									"end": 167,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 160,
									"end": 161,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 153,
									"end": 168,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 191,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 192,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 203,
									"end": 1088,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 203,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 257,
									"end": 262,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 313,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 303,
									"end": 307,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 295,
									"end": 301,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 291,
									"end": 308,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 287,
									"end": 314,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 277,
									"end": 332,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 277,
									"end": 332,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 328,
									"end": 329,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 326,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 318,
									"end": 330,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 277,
									"end": 332,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 277,
									"end": 332,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 357,
									"end": 363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 351,
									"end": 364,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 420,
									"end": 422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 416,
									"end": 418,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 413,
									"end": 423,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 410,
									"end": 446,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 410,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 410,
									"end": 446,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 426,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 501,
									"end": 503,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 469,
									"end": 471,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 568,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 555,
									"end": 568,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 551,
									"end": 573,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 551,
									"end": 573,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 551,
									"end": 573,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 575,
									"end": 577,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 547,
									"end": 578,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 543,
									"end": 583,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 531,
									"end": 584,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 531,
									"end": 584,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 531,
									"end": 584,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 599,
									"end": 617,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 599,
									"end": 617,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 599,
									"end": 617,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 619,
									"end": 641,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 619,
									"end": 641,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 619,
									"end": 641,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 596,
									"end": 642,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 593,
									"end": 665,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 593,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 593,
									"end": 665,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 645,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 645,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 645,
									"end": 663,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 645,
									"end": 663,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 645,
									"end": 663,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 685,
									"end": 695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 681,
									"end": 683,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 674,
									"end": 696,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 705,
									"end": 723,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 742,
									"end": 746,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 732,
									"end": 746,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 732,
									"end": 746,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 787,
									"end": 790,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 782,
									"end": 784,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 777,
									"end": 779,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 769,
									"end": 775,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 765,
									"end": 780,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 761,
									"end": 785,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 758,
									"end": 791,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 755,
									"end": 808,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 755,
									"end": 808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 755,
									"end": 808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 801,
									"end": 802,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 794,
									"end": 806,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 755,
									"end": 808,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 755,
									"end": 808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 826,
									"end": 827,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 827,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 817,
									"end": 827,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 836,
									"end": 969,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 836,
									"end": 969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 850,
									"end": 852,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 847,
									"end": 848,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 844,
									"end": 853,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 836,
									"end": 969,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 836,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 836,
									"end": 969,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 938,
									"end": 952,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 938,
									"end": 952,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 938,
									"end": 952,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 934,
									"end": 957,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 934,
									"end": 957,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 928,
									"end": 958,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 907,
									"end": 921,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 907,
									"end": 921,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 907,
									"end": 921,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 903,
									"end": 926,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 903,
									"end": 926,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 896,
									"end": 959,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 861,
									"end": 871,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 861,
									"end": 871,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 861,
									"end": 871,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 861,
									"end": 871,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 836,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 836,
									"end": 969,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 836,
									"end": 969,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 836,
									"end": 969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 987,
									"end": 989,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 984,
									"end": 985,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 981,
									"end": 990,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1047,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1024,
									"end": 1039,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1020,
									"end": 1044,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1013,
									"end": 1048,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 978,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1076,
									"end": 1082,
									"name": "SWAP7",
									"source": 4
								},
								{
									"begin": 203,
									"end": 1088,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 203,
									"end": 1088,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1200,
									"end": 1206,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1253,
									"end": 1255,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1241,
									"end": 1250,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1232,
									"end": 1239,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1228,
									"end": 1251,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1224,
									"end": 1256,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1270,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1266,
									"end": 1267,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1259,
									"end": 1271,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1221,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1302,
									"end": 1311,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1312,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1372,
									"end": 1374,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1370,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1361,
									"end": 1375,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1388,
									"end": 1389,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1385,
									"end": 1386,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1390,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1358,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1464,
									"end": 1471,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1461,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1444,
									"end": 1453,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1462,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1411,
									"end": 1472,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1401,
									"end": 1472,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1401,
									"end": 1472,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1518,
									"end": 1520,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1507,
									"end": 1516,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1503,
									"end": 1521,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1497,
									"end": 1522,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1481,
									"end": 1522,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1481,
									"end": 1522,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1549,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1537,
									"end": 1545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1534,
									"end": 1550,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1563,
									"end": 1564,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1560,
									"end": 1561,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1565,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1567,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1641,
									"end": 1648,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1630,
									"end": 1638,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1619,
									"end": 1628,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1615,
									"end": 1639,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1586,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 1649,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 1649,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 1649,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1093,
									"end": 1655,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1745,
									"end": 1746,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1735,
									"end": 1747,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1735,
									"end": 1747,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1792,
									"end": 1793,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1782,
									"end": 1794,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1782,
									"end": 1794,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1782,
									"end": 1794,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1803,
									"end": 1864,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1803,
									"end": 1864,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1857,
									"end": 1861,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 1849,
									"end": 1855,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1845,
									"end": 1862,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1835,
									"end": 1862,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1835,
									"end": 1862,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1803,
									"end": 1864,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1803,
									"end": 1864,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1910,
									"end": 1912,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1902,
									"end": 1908,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1899,
									"end": 1913,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1876,
									"end": 1914,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1947,
									"end": 2024,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1944,
									"end": 1945,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1937,
									"end": 2025,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2052,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2038,
									"end": 2053,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2076,
									"end": 2080,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2073,
									"end": 2074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2066,
									"end": 2081,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1873,
									"end": 2091,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1660,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3f3d23e03be564623ab48b84da994eee898ff97fb916c8745e4bf68adb0e23a64736f6c63430008090033",
									".code": [
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1256,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1216,
											"end": 1257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1216,
											"end": 1257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1076,
											"end": 1263,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1402,
											"end": 1404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1268,
											"end": 1445,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1925,
											"end": 1961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1783,
											"end": 1967,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3371,
											"end": 3401,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3472,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3767,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3802,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3877,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3878,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3894,
											"end": 3912,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3894,
											"end": 3912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3887,
											"end": 3921,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3563,
											"end": 3963,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4209,
											"end": 4211,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4182,
											"end": 4212,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4248,
											"end": 4282,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4228,
											"end": 4246,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4228,
											"end": 4246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4228,
											"end": 4246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4221,
											"end": 4283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4292,
											"end": 4324,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4341,
											"end": 4360,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4341,
											"end": 4360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3968,
											"end": 4366,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10928,
											"end": 10933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4585,
											"end": 4615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4682,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4624,
											"end": 4683,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4371,
											"end": 4724,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4931,
											"end": 4933,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4913,
											"end": 4934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 4972,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4950,
											"end": 4968,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4950,
											"end": 4968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4943,
											"end": 4973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5043,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5080,
											"end": 5087,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5105,
											"end": 5124,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5105,
											"end": 5124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4729,
											"end": 5130,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5349,
											"end": 5379,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5449,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5450,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5491,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5484,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5459,
											"end": 5492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5509,
											"end": 5528,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5509,
											"end": 5528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5135,
											"end": 5534,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 5743,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5760,
											"end": 5778,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5760,
											"end": 5778,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 5778,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5819,
											"end": 5853,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5890,
											"end": 5898,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5863,
											"end": 5899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5539,
											"end": 5941,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1402,
											"end": 1404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1445,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 787,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 733,
											"end": 787,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 723,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 723,
											"end": 788,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 713,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 806,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 792,
											"end": 804,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 713,
											"end": 806,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 616,
											"end": 812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 616,
											"end": 812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 817,
											"end": 1071,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 817,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 891,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 925,
											"end": 932,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 921,
											"end": 944,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 917,
											"end": 949,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 914,
											"end": 966,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 914,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 914,
											"end": 966,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 962,
											"end": 963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 952,
											"end": 964,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 914,
											"end": 966,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 914,
											"end": 966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 985,
											"end": 1014,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1014,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 985,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 975,
											"end": 1014,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1033,
											"end": 1065,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1033,
											"end": 1065,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 1071,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1450,
											"end": 1778,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1450,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1533,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1594,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1599,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1616,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1564,
											"end": 1616,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1610,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1614,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1616,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1564,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1635,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1664,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1717,
											"end": 1719,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1683,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1683,
											"end": 1721,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1683,
											"end": 1721,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1683,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1772,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1772,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1778,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1778,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1778,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1778,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2158,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1972,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2104,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2052,
											"end": 2104,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2090,
											"end": 2102,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2104,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2052,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2123,
											"end": 2152,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2123,
											"end": 2152,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2123,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2152,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2158,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 2158,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2163,
											"end": 2423,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2163,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2231,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2294,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2290,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2295,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2312,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2260,
											"end": 2312,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2308,
											"end": 2309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2310,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2312,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2260,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2331,
											"end": 2360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2331,
											"end": 2360,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2331,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2379,
											"end": 2417,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2379,
											"end": 2417,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2379,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2423,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2428,
											"end": 2865,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2428,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2503,
											"end": 2515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2515,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2560,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2571,
											"end": 2632,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2632,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2571,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2670,
											"end": 2676,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2681,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2682,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2859,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2641,
											"end": 2859,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2816,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2813,
											"end": 2814,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2806,
											"end": 2821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2849,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2859,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2641,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2865,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2870,
											"end": 3152,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2870,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 2913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2944,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2928,
											"end": 3121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2977,
											"end": 3054,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 3055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3078,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 3110,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3111,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2928,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3137,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2870,
											"end": 3152,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 711,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "1421:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1430:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1438:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								710
							],
							"name": "ERC20",
							"nameLocation": "1412:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1459:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1620:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1646:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2034:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1990:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2011:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:0"
									},
									"scope": 585,
									"src": "1978:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2225:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2235:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2210:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:0"
									},
									"scope": 585,
									"src": "2156:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2438:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2448:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2423:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:0"
									},
									"scope": 585,
									"src": "2367:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3158:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3168:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3151:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:0"
									},
									"scope": 585,
									"src": "3093:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3314:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3331:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3324:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:0"
									},
									"scope": 585,
									"src": "3244:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3491:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3501:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:0"
									},
									"scope": 585,
									"src": "3408:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3814:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3824:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "3840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3879:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3900:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3747:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:0"
									},
									"scope": 585,
									"src": "3729:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4074:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4091:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4084:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:0"
									},
									"scope": 585,
									"src": "3976:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4522:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4532:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "4548:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4612:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:0"
									},
									"scope": 585,
									"src": "4433:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5325:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5335:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5353:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5375:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5460:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:0"
									},
									"scope": 585,
									"src": "5192:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5967:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5977:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6024:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6050:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6068:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6089:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5917:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:0"
									},
									"scope": 585,
									"src": "5873:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6693:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6703:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6719:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6741:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6778:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6811:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6831:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6947:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6966:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "6922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7003:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6638:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:0"
									},
									"scope": 585,
									"src": "6594:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7583:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7601:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7617:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7609:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7609:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7601:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7679:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7693:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7685:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7685:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7671:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7773:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7746:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7803:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7795:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7817:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7827:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7817:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7850:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7865:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7873:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7842:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "7924:73:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7948:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7958:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7948:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7966:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7980:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7948:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7948:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8006:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8006:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8006:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8060:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8045:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8040:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8102:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8108:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8082:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8082:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7027:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7484:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7583:0:0"
									},
									"scope": 585,
									"src": "7475:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8467:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8485:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8477:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8553:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8553:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8553:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8613:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8613:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8613:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8645:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8645:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8667:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8645:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8688:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8688:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8683:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8736:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8736:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8132:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8411:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8425:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:0"
									},
									"scope": 585,
									"src": "8402:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9176:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9194:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9186:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9294:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9294:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9294:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9264:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9264:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9332:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9324:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9349:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9349:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9324:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9385:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9403:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9385:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9411:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9377:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9377:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9458:79:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9482:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9482:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9503:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9520:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9503:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9482:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9482:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9546:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9562:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9546:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9546:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9579:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9661:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9632:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9632:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9632:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8797:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9120:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9134:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9151:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9143:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9176:0:0"
									},
									"scope": 585,
									"src": "9111:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10223:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10258:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10250:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10250:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10262:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10233:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10338:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10330:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10330:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10330:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10319:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10342:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10311:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10390:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10390:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10390:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10420:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10390:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10390:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10450:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10466:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10441:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10441:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10436:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9693:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10119:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:78:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 585,
									"src": "10110:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "10881:321:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10899:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "10891:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10891:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "10957:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10982:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10977:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10977:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10977:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10957:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "10953:243:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "10996:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11018:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11018:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11046:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11010:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11010:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11010:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11092:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11129:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11136:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11145:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11164:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11145:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11120:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11120:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10486:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10770:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:78:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:0:0"
									},
									"scope": 585,
									"src": "10761:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "11905:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11208:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11795:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11825:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11855:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11847:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:72:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11905:0:0"
									},
									"scope": 585,
									"src": "11786:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12613:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "11913:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12504:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12541:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12533:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12563:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12555:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:72:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:0:0"
									},
									"scope": 585,
									"src": "12495:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1403:11214:0",
							"usedErrors": []
						}
					],
					"src": "105:12513:0"
				},
				"id": 0
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 597,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 606,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 663,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 663,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 663,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 663,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 663,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 663,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "305:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 688,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 688,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 688,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "localhost/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							710
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 696,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 695,
												"id": 698,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 710,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 710,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 711,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			}
		}
	}
}